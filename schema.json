{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "rse v1.7.1 configuration schema",
  "description": "https://docs.reliverse.org/cli",
  "type": "object",
  "properties": {
    "$schema": {
      "type": "string",
      "enum": ["https://reliverse.org/schema.json", "./schema.json"]
    },
    "projectName": {
      "anyOf": [
        {
          "const": "unknown",
          "type": "string"
        },
        {
          "minLength": 1,
          "type": "string"
        }
      ]
    },
    "projectAuthor": {
      "anyOf": [
        {
          "const": "unknown",
          "type": "string"
        },
        {
          "minLength": 1,
          "type": "string"
        }
      ]
    },
    "projectDescription": {
      "type": "string"
    },
    "version": {
      "type": "string"
    },
    "projectLicense": {
      "type": "string"
    },
    "projectRepository": {
      "type": "string"
    },
    "projectDomain": {
      "type": "string"
    },
    "projectGitService": {
      "type": "string",
      "enum": ["github", "gitlab", "bitbucket", "none"]
    },
    "projectDeployService": {
      "type": "string",
      "enum": ["vercel", "netlify", "railway", "deno", "none"]
    },
    "projectPackageManager": {
      "type": "string",
      "enum": ["npm", "pnpm", "yarn", "bun"]
    },
    "projectState": {
      "type": "string",
      "enum": ["creating", "created"]
    },
    "projectCategory": {
      "type": "string",
      "enum": [
        "unknown",
        "website",
        "vscode",
        "browser",
        "cli",
        "library",
        "mobile"
      ]
    },
    "projectSubcategory": {
      "type": "string",
      "enum": ["unknown", "e-commerce", "tool"]
    },
    "projectFramework": {
      "type": "string",
      "enum": [
        "unknown",
        "nextjs",
        "vite",
        "svelte",
        "remix",
        "astro",
        "nuxt",
        "solid",
        "qwik",
        "vue",
        "wxt",
        "lynx",
        "react-native",
        "expo",
        "capacitor",
        "ionic",
        "electron",
        "tauri",
        "neutralino",
        "rempts",
        "citty",
        "commander",
        "cac",
        "meow",
        "yargs",
        "vscode",
        "webextension",
        "browser-extension",
        "npm-jsr"
      ]
    },
    "projectTemplate": {
      "type": "string",
      "enum": [
        "unknown",
        "blefnk/relivator-nextjs-template",
        "blefnk/relivator-docker-template",
        "blefnk/next-react-ts-src-minimal",
        "blefnk/all-in-one-nextjs-template",
        "blefnk/create-t3-app",
        "blefnk/create-next-app",
        "blefnk/astro-starlight-template",
        "blefnk/versator-nextjs-template",
        "blefnk/relivator-lynxjs-template",
        "blefnk/relivator-react-native-template",
        "reliverse/template-browser-extension",
        "microsoft/vscode-extension-samples",
        "microsoft/vscode-extension-template",
        "rsetarter-template",
        "blefnk/deno-cli-tutorial"
      ]
    },
    "projectTemplateDate": {
      "type": "string"
    },
    "features": {
      "type": "object",
      "properties": {
        "i18n": {
          "type": "boolean"
        },
        "analytics": {
          "type": "boolean"
        },
        "themeMode": {
          "type": "string",
          "enum": ["light", "dark", "dark-light"]
        },
        "authentication": {
          "type": "boolean"
        },
        "api": {
          "type": "boolean"
        },
        "database": {
          "type": "boolean"
        },
        "testing": {
          "type": "boolean"
        },
        "docker": {
          "type": "boolean"
        },
        "ci": {
          "type": "boolean"
        },
        "commands": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "webview": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "language": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "themes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "preferredLibraries": {
      "type": "object",
      "properties": {
        "stateManagement": {
          "type": "string",
          "enum": ["zustand", "jotai", "redux-toolkit", "unknown"]
        },
        "formManagement": {
          "type": "string",
          "enum": ["react-hook-form", "formik", "unknown"]
        },
        "styling": {
          "type": "string",
          "enum": [
            "tailwind",
            "styled-components",
            "css-modules",
            "sass",
            "unknown"
          ]
        },
        "uiComponents": {
          "type": "string",
          "enum": ["shadcn-ui", "chakra-ui", "material-ui", "unknown"]
        },
        "testing": {
          "type": "string",
          "enum": ["bun", "vitest", "jest", "playwright", "cypress", "unknown"]
        },
        "authentication": {
          "type": "string",
          "enum": [
            "better-auth",
            "clerk",
            "next-auth",
            "supabase-auth",
            "auth0",
            "unknown"
          ]
        },
        "databaseLibrary": {
          "type": "string",
          "enum": ["drizzle", "prisma", "supabase", "unknown"]
        },
        "databaseProvider": {
          "type": "string",
          "enum": ["pg", "mysql", "sqlite", "mongodb", "unknown"]
        },
        "api": {
          "type": "string",
          "enum": ["hono", "trpc", "graphql", "rest", "unknown"]
        },
        "linting": {
          "type": "string",
          "enum": ["eslint", "unknown"]
        },
        "formatting": {
          "type": "string",
          "enum": ["biome", "unknown"]
        },
        "payment": {
          "type": "string",
          "enum": ["stripe", "unknown"]
        },
        "analytics": {
          "type": "string",
          "enum": ["vercel", "unknown"]
        },
        "monitoring": {
          "type": "string",
          "enum": ["sentry", "unknown"]
        },
        "logging": {
          "type": "string",
          "enum": ["axiom", "unknown"]
        },
        "forms": {
          "type": "string",
          "enum": ["react-hook-form", "unknown"]
        },
        "notifications": {
          "type": "string",
          "enum": ["sonner", "unknown"]
        },
        "search": {
          "type": "string",
          "enum": ["algolia", "unknown"]
        },
        "uploads": {
          "type": "string",
          "enum": ["uploadthing", "unknown"]
        },
        "validation": {
          "type": "string",
          "enum": ["zod", "typebox", "valibot", "unknown"]
        },
        "documentation": {
          "type": "string",
          "enum": ["starlight", "nextra", "unknown"]
        },
        "icons": {
          "type": "string",
          "enum": ["lucide", "unknown"]
        },
        "mail": {
          "type": "string",
          "enum": ["resend", "unknown"]
        },
        "cache": {
          "type": "string",
          "enum": ["redis", "unknown"]
        },
        "storage": {
          "type": "string",
          "enum": ["cloudflare", "unknown"]
        },
        "cdn": {
          "type": "string",
          "enum": ["cloudflare", "unknown"]
        },
        "cms": {
          "type": "string",
          "enum": ["contentlayer", "unknown"]
        },
        "i18n": {
          "type": "string",
          "enum": ["next-intl", "unknown"]
        },
        "seo": {
          "type": "string",
          "enum": ["next-seo", "unknown"]
        },
        "motion": {
          "type": "string",
          "enum": ["framer", "unknown"]
        },
        "charts": {
          "type": "string",
          "enum": ["recharts", "unknown"]
        },
        "dates": {
          "type": "string",
          "enum": ["dayjs", "unknown"]
        },
        "markdown": {
          "type": "string",
          "enum": ["mdx", "unknown"]
        },
        "security": {
          "type": "string",
          "enum": ["auth", "unknown"]
        },
        "routing": {
          "type": "string",
          "enum": ["next", "react-router", "tanstack-router", "unknown"]
        }
      }
    },
    "codeStyle": {
      "type": "object",
      "properties": {
        "lineWidth": {
          "type": "number"
        },
        "indentSize": {
          "type": "number"
        },
        "indentStyle": {
          "type": "string",
          "enum": ["space", "tab"]
        },
        "quoteMark": {
          "type": "string",
          "enum": ["single", "double"]
        },
        "semicolons": {
          "type": "boolean"
        },
        "trailingComma": {
          "type": "string",
          "enum": ["none", "es5", "all"]
        },
        "bracketSpacing": {
          "type": "boolean"
        },
        "arrowParens": {
          "type": "string",
          "enum": ["always", "avoid"]
        },
        "tabWidth": {
          "type": "number"
        },
        "jsToTs": {
          "type": "boolean"
        },
        "dontRemoveComments": {
          "type": "boolean"
        },
        "shouldAddComments": {
          "type": "boolean"
        },
        "typeOrInterface": {
          "type": "string",
          "enum": ["type", "interface", "mixed"]
        },
        "importOrRequire": {
          "type": "string",
          "enum": ["import", "require", "mixed"]
        },
        "cjsToEsm": {
          "type": "boolean"
        },
        "modernize": {
          "type": "object",
          "properties": {
            "replaceFs": {
              "type": "boolean"
            },
            "replacePath": {
              "type": "boolean"
            },
            "replaceHttp": {
              "type": "boolean"
            },
            "replaceProcess": {
              "type": "boolean"
            },
            "replaceConsole": {
              "type": "boolean"
            },
            "replaceEvents": {
              "type": "boolean"
            }
          }
        },
        "importSymbol": {
          "type": "string"
        }
      }
    },
    "monorepo": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["none", "turborepo", "nx", "pnpm", "bun"]
        },
        "packages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sharedPackages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ignoreDependencies": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "customRules": {
      "type": "object",
      "properties": {},
      "patternProperties": {
        "^(.*)$": {}
      }
    },
    "multipleRepoCloneMode": {
      "type": "boolean"
    },
    "customUserFocusedRepos": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "customDevsFocusedRepos": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "hideRepoSuggestions": {
      "type": "boolean"
    },
    "customReposOnNewProject": {
      "type": "boolean"
    },
    "envComposerOpenBrowser": {
      "type": "boolean"
    },
    "repoBranch": {
      "type": "string"
    },
    "repoPrivacy": {
      "type": "string",
      "enum": ["unknown", "public", "private"]
    },
    "projectArchitecture": {
      "type": "string",
      "enum": ["unknown", "fullstack", "separated"]
    },
    "projectRuntime": {
      "type": "string",
      "enum": ["node", "deno", "bun"]
    },
    "skipPromptsUseAutoBehavior": {
      "type": "boolean"
    },
    "deployBehavior": {
      "type": "string",
      "enum": ["prompt", "autoYes", "autoNo"]
    },
    "depsBehavior": {
      "type": "string",
      "enum": ["prompt", "autoYes", "autoNo"]
    },
    "gitBehavior": {
      "type": "string",
      "enum": ["prompt", "autoYes", "autoNo"]
    },
    "i18nBehavior": {
      "type": "string",
      "enum": ["prompt", "autoYes", "autoNo"]
    },
    "scriptsBehavior": {
      "type": "string",
      "enum": ["prompt", "autoYes", "autoNo"]
    },
    "existingRepoBehavior": {
      "type": "string",
      "enum": ["prompt", "autoYes", "autoYesSkipCommit", "autoNo"]
    },
    "relinterConfirm": {
      "type": "string",
      "enum": ["promptOnce", "promptEachFile", "autoYes"]
    }
  }
}
